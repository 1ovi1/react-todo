import type {Task} from "../interfaces/task.interface.ts";

export const tasks: Task[] = [
    {
        id: 1,
        title: `Пофиксить поведение формы на странице "Контакты"`,
        description: "Форма на странице контактов не валидируется корректно. Необходимо исправить логику валидации полей email и телефона, а также добавить обработку ошибок при отправке.",
        tag: "bug",
        status: "todo",
        priority: "low"
    },
    {
        id: 2,
        title: "Добавить возможность загрузки аватара пользователя",
        description: "Реализовать компонент для загрузки и обрезки изображений профиля пользователя. Добавить поддержку форматов JPG, PNG с ограничением размера до 5MB.",
        tag: "feature",
        status: "in-progress",
        priority: "medium"
    },
    {
        id: 3,
        title: "Создать документацию по API эндпоинтам",
        description: "Написать подробную документацию для всех REST API эндпоинтов с примерами запросов и ответов. Использовать Swagger/OpenAPI спецификацию.",
        tag: "documentation",
        status: "todo",
        priority: "high"
    },
    {
        id: 4,
        title: "Рефакторинг компонента TaskList для улучшения производительности",
        description: "Оптимизировать рендеринг списка задач с помощью виртуализации. Добавить мемоизацию для предотвращения лишних перерендеров при изменении состояния.",
        tag: "refactor",
        status: "in-progress",
        priority: "medium"
    },
    {
        id: 5,
        title: "Написать unit-тесты для компонента TaskItem",
        description: "Покрыть тестами основную функциональность компонента TaskItem: рендеринг, обработка клика, изменение статуса. Использовать Jest и React Testing Library.",
        tag: "test",
        status: "done",
        priority: "high"
    },
    {
        id: 6,
        title: "Исправить баг с некорректным отображением статуса задачи",
        description: "Статус задачи не обновляется в UI после изменения в базе данных. Необходимо проверить обновление состояния в Redux store и синхронизацию с сервером.",
        tag: "bug",
        status: "in-progress",
        priority: "high"
    },
    {
        id: 7,
        title: "Реализовать функцию фильтрации задач по приоритету",
        description: "Добавить dropdown компонент для фильтрации задач по уровню приоритета (low, medium, high). Реализовать логику фильтрации с сохранением состояния в URL.",
        tag: "feature",
        status: "todo",
        priority: "low"
    }
]